name: 'Publish To Environment'

on:
  workflow_dispatch:
    inputs:
      appVersion:
        description: App version to deploy to environment(s) (current, prerelease, draft, latest, version number or PR_<PR Id>)
        required: false
        default: 'Sandbox'
      environmentName:
        description: Environment mask to receive the new version (* for all, PROD* for all environments starting with PROD)
        required: true

permissions:
  actions: read
  contents: read
  id-token: write

defaults:
  run:
    shell: pwsh

env:
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}
  secrets: ${{ vars.ALGitHubSecrets }}

jobs:
  Initialization:
    runs-on: windows-latest
    outputs:
      deploymentEnvironmentsJson: ${{ steps.SetOutputs.outputs.deploymentEnvironmentsJson }}
      environmentsMatrixJson: ${{ steps.SetOutputs.outputs.environmentsMatrixJson }}
    steps:
      - name: Read settings
        uses: microsoft/AL-Go-Actions/ReadSettings@v7.2
        with:
          shell: pwsh
          get: deploymentEnvironments,environmentsMatrix

      - name: Set deployment outputs
        id: SetOutputs
        run: |
          $envs = '${{ toJson(deploymentEnvironments) }}'
          $matrix = '${{ toJson(environmentsMatrix) }}'
          echo "deploymentEnvironmentsJson=$envs" >> $env:GITHUB_OUTPUT
          echo "environmentsMatrixJson=$matrix" >> $env:GITHUB_OUTPUT

  Deploy:
    needs: Initialization
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ fromJson(needs.Initialization.outputs.environmentsMatrixJson) }}
    steps:
      - name: Publish AL Apps
        uses: microsoft/AL-Go-Actions/PublishApps@v7.2
        with:
          shell: pwsh
          environmentName: ${{ matrix.environment }}
          appVersion: ${{ github.event.inputs.appVersion }}
          publishToAppSource: false
          useNewAppManagement: true

  PostProcess:
    needs: [Deploy]
    runs-on: windows-latest
    if: always()
    steps:
      - name: Post deployment summary
        run: echo "Deployment complete. Check logs and status above."

